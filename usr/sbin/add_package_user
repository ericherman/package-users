#!/bin/bash
# Copyright (c) 2004 Matthias S. Benkmann <article AT winterdrache DOT de>
# You may do everything with this code except misrepresent its origin.
# PROVIDED `AS IS' WITH ABSOLUTELY NO WARRANTY OF ANY KIND!
#
# Adjusted for CBL and stylistic preferences by Brett Neumeier

source /etc/pkgusr/config.sh

if [ $# -ne 2 ]; then
  echo 1>&2 <<EOF
USAGE:
add_package_user <description> <name>

If a user account called <name> exists, a message will be printed and
everything will be left as-is. If a user account called <name> does not
exist, one will be created.

The account's primary group will be <name> and the /etc/passwd
description field will be set to <description>.  The new account will
get the "install" group as a supplementary group.

<name> must be a legal user name: it must start with a lowercase letter
or underscore, and consist of up to 32 lowercase letters, digits,
underscores, and dashes.

<description> needs to be a valid string for the /etc/passwd description
field. This means, among other things, that it must not contain ":".
Don't forget to properly quote <description> if it contains spaces or
other characters interpreted by the shell!
EOF
  exit 1
fi

# MINUID (incl.) and MAXUID (excl.) determine the numeric range from
# which the new account's UID will be picked, using these rules:
#
#  1. If the range contains no unused UID, Exit with error.
#  2. If MAXUID-1 is still unused, find the greatest UID from the range
#     that is used and pick the number after that.
#  3. If MAXUID-1 is in use, pick the first unused number from the range.
#
# The GID for the new user will be the same as the UID.

DESCRIPTION=$1
NAME=$2
GNAME=$2
HOME=$PKGUSR_HOME/$NAME

if [ $UID -ne 0 ]; then echo Please run this script as root. ; exit 1; fi

# test if user already exists
grep "^$NAME:.*" /etc/passwd
if [ $? -eq 0 ]; then
  echo 'Package user already exists! Do su '$name' to do maintenance work.'
  exit 1
fi

UIDLIST=$(cut -d : -f 3 /etc/passwd | sort -n)

# find last used UID within range
U=0
for i in $UIDLIST
do
  if [ $i -ge $MAXUID ]; then break; fi
  if [ $i -ge $MINUID ]; then U=$i; fi
done

# if no UID from the range is used, pick the first, otherwise pick the one
# immediately following the last UID in use.
if [ $U -eq 0 ]; then U=$MINUID; else U=$(expr $U + 1); fi

# if the UID determined above is >= MAXUID (i.e. illegal)
# then we look for the first unused UID in the range.
if [ $U -ge $MAXUID ]; then
  U=$MINUID
  for i in $UIDLIST
  do
    if [ $U -eq $i ]; then U=$(expr $u + 1); fi
    if [ $i -ge $MAXUID ]; then break; fi
  done

  if [ $U -ge $MAXUID ]; then
    echo 'Error: No UIDs are available!'
    exit 1
  fi
fi

echo "Will create user and group $NAME with uid and gid: $U"

unset UIDLIST

echo "Creating group $NAME with gid $U"
groupadd -g $U $NAME || exit 1

echo "Creating user $NAME with uid $U"
useradd -c "$DESCRIPTION" -d $HOME -g $NAME -G install \
        -s /bin/bash -m -k $PKGUSR_SKEL -u $U $NAME || exit 2

# TODO: decide if I want to worry about mail spools for package users
# We don't need mail spools for package users, but useradd insists on
# creating them.
# if [ -f /var/mail/${name} ]
# then
#   rm -f /var/mail/${name}
# fi

cd $HOME
chown --recursive $U:$G .
chmod 755 .
chmod 755 options

exit 0
